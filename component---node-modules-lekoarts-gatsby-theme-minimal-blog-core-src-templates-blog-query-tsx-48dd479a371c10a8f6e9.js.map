{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-blog-query-tsx-48dd479a371c10a8f6e9.js","mappings":"yPAkCA,MAVaA,IAA6B,IAA5B,MAAEC,GAAoBD,EAClC,MAAM,SAAEE,EAAQ,SAAEC,IAAaC,EAAAA,EAAAA,KAE/B,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAM,MACLD,EAAAA,EAAAA,IAACE,EAAAA,EAAO,CAACN,MAAOA,EAAOO,GAAI,CAAEC,GAAI,CAAC,EAAG,MAC9B,EC3Bb,MCQe,SAA4BT,GAAuB,IAAjBU,GAAKC,EAAAA,EAAAA,GAAA,KAAAC,EAAAA,EAAAA,GAAAZ,GAAAA,IACpD,MACEa,MAAM,QAAEC,IACNJ,EAEJ,OAAOK,EAAAA,cAACC,EAAIC,OAAAC,OAAA,CAACjB,MAAOa,EAAQK,OAAWT,GACzC,C,4TCcA,IAjBiBV,IAA0B,IAAzB,KAAEoB,GAAiBpB,EACnC,MAAM,SAAEE,EAAQ,SAAEC,IAAaC,EAAAA,EAAAA,KAE/B,OACEC,EAAAA,EAAAA,IAACU,EAAAA,SAAc,KACZK,EAAKC,KAAI,CAACC,EAAKC,KACdlB,EAAAA,EAAAA,IAACU,EAAAA,SAAc,CAACS,IAAKF,EAAIG,QACpBF,GAAC,MACJlB,EAAAA,EAAAA,IAACqB,EAAAA,KAAI,CAAClB,GAAKmB,IAAC,IAAAC,EAAA,O,qWAAAC,CAAA,GAAmB,QAAnBD,EAAWD,EAAEG,cAAM,IAAAF,OAAA,EAARA,EAAUG,EAAC,EAAKC,IAAIC,EAAAA,EAAAA,GAAe,IAAI9B,EAAQ,IAAID,EAAQ,IAAIoB,EAAIG,OACvFH,EAAIY,SAII,C,msBCYrB,MAjBqBlC,IAAA,IAAC,KAAEmC,EAAI,SAAEC,GAAW,GAAyBpC,EAAA,OAChEK,EAAAA,EAAAA,IAACgC,EAAAA,GAAG,CAACC,GAAI,IACPjC,EAAAA,EAAAA,IAACqB,EAAAA,KAAI,CAACM,GAAIG,EAAKV,KAAMjB,GAAKmB,IAAC,IAAAC,EAAA,OAAAC,EAAAA,EAAA,GAAmB,QAAnBD,EAAWD,EAAEG,cAAM,IAAAF,OAAA,EAARA,EAAUG,GAAC,IAAEQ,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAM,QAAO,GAClFL,EAAKM,QAERpC,EAAAA,EAAAA,IAAA,KAAGG,GAAI,CAAEgC,MAAM,YAAc/B,GAAI,EAAGsB,EAAG,CAAES,MAAM,aAAgBD,SAAU,CAAC,EAAG,EAAG,MAC9ElC,EAAAA,EAAAA,IAAA,YAAO8B,EAAKO,MACXP,EAAKf,MAAQgB,IACZ/B,EAAAA,EAAAA,IAACU,EAAAA,SAAc,YAEbV,EAAAA,EAAAA,IAACsC,EAAAA,EAAQ,CAACvB,KAAMe,EAAKf,SAIvB,ECPR,MARgBpB,IAAA,IAAC,MAAEC,EAAK,UAAE2C,EAAS,GAAK,SAAER,GAAW,GAAoBpC,EAAA,OACvEK,EAAAA,EAAAA,IAAA,WAASG,GAAI,CAAE8B,GAAI,CAAC,EAAG,EAAG,IAAMM,UAAWA,GACxC3C,EAAMoB,KAAKc,IACV9B,EAAAA,EAAAA,IAACwC,EAAY,CAACrB,IAAKW,EAAKV,KAAMU,KAAMA,EAAMC,SAAUA,MAE9C,C,wBC1BG,SAASxB,EAA0BkC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,sBAAwBD,EAC/D,C","sources":["webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/blog.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/blog-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/blog.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx","webpack://minimal-blog/./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Flex } from \"theme-ui\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\nimport Listing from \"@lekoarts/gatsby-theme-minimal-blog/src/components/listing\"\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\"\nimport Seo from \"@lekoarts/gatsby-theme-minimal-blog/src/components/seo\"\n\nexport type MBBlogProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Blog = ({ posts }: MBBlogProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Blog\n\nexport const Head: HeadFC = () => <Seo title=\"Blog\" />\n","import { graphql } from \"gatsby\"\nimport BlogComponent from \"../components/blog\"\n\nexport default BlogComponent\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Blog from \"../../../components/blog\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreBlog({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Blog posts={allPost.nodes} {...props} />\n}\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}"],"names":["_ref","posts","tagsPath","basePath","useMinimalBlogConfig","jsx","Layout","Listing","sx","mt","props","_extends","_objectDestructuringEmpty","data","allPost","React","Blog","Object","assign","nodes","tags","map","tag","i","key","slug","Link","t","_t$styles","_objectSpread","styles","a","to","replaceSlashes","name","post","showTags","Box","mb","fontSize","color","title","date","ItemTags","className","BlogListItem","obj","TypeError"],"sourceRoot":""}